# =====================================================================
# nginx/app.conf (Reverse Proxy for NestJS API)
#
# - Handles ALL incoming HTTP/HTTPS traffic.
# - Redirects plain HTTP → HTTPS (secure).
# - Terminates TLS using self-signed certs (or later Let's Encrypt).
# - Forwards to API container (api:3000).
# - Adds gzip, timeouts, rate limiting, and security headers.
# =====================================================================

# ---- Rate limiting config ----
# Each client IP gets 100 requests per minute.
# Stored in 10MB shared memory for efficiency.
limit_req_zone $binary_remote_addr zone=perip:10m rate=100r/m;

# ---- Define upstream target for API ----
# Docker DNS: "api" resolves to the API container.
# keepalive keeps TCP sessions warm → faster requests.
upstream api_upstream {
    server api:3000;
    keepalive 64;
}

# =====================================================================
# Block 1: HTTP (port 80) → redirect to HTTPS
# =====================================================================
server {
    listen 80 default_server;
    server_name _;   # catch-all (since no domain, just IP)

    # Redirect ALL traffic to HTTPS
    return 301 https://$host$request_uri;
}

# =====================================================================
# Block 2: HTTPS (port 443)
# =====================================================================
server {
    listen 443 ssl http2;   # TLS + HTTP/2 enabled
    server_name _;          # catch-all (IP-based access)

    # ---- TLS certs ----
    # Self-signed certs generated via OpenSSL
    ssl_certificate     /etc/ssl/onprem/selfsigned.crt;
    ssl_certificate_key /etc/ssl/onprem/selfsigned.key;

    # ---- Security headers ----
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    # ---- Gzip compression ----
    gzip on;
    gzip_min_length 1024;
    gzip_comp_level 5;
    gzip_types
        text/plain
        text/css
        text/javascript
        application/json
        application/javascript
        application/xml
        application/xml+rss
        image/svg+xml;

    # ---- General safety & timeouts ----
    client_max_body_size 10m;   # allow ~10MB uploads
    keepalive_timeout 65s;
    proxy_read_timeout 60s;
    proxy_send_timeout 60s;
    proxy_connect_timeout 5s;

    # ---- Health endpoint ----
    # Excluded from rate limiting (important for uptime monitors).
    location /health {
        proxy_pass http://api_upstream/health;

        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ---- All other API requests ----
    location / {
        # Apply 100 req/min per IP with burst allowance.
        limit_req zone=perip burst=50 nodelay;

        proxy_pass http://api_upstream;

        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # Forward original client info (for logs, auth)
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
